# app/config/services.yml

imports: 
    - { resource: '@AppBundle/Resources/Config/services.yml' }  


services:
    # default configuration for services in *this* file
    _defaults:
        # automatically injects dependencies in your services
        autowire: true
        # automatically registers your services as commands, event subscribers, etc.
        autoconfigure: true
        # this means you cannot fetch services directly from the container via $container->get()
        # if you need to do this, you can override this setting on individual services
        public: false

    # makes classes in src/AppBundle available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    AppBundle\:
        resource: '../../src/AppBundle/*'
        # you can exclude directories or files
        # but if a service is unused, it's removed anyway
        exclude: '../../src/AppBundle/{Entity,Repository,Listener,Image,Resources,Tests,Controller,Exception}'

    # controllers are imported separately to make sure they're public
    # and have a tag that allows actions to type-hint services
    AppBundle\Controller\:
        resource: '../../src/AppBundle/Controller'
        public: true
        tags: ['controller.service_arguments']

    # factories are imported separately to allow dynamic service subscribe
    AppBundle\Factory\:
        resource: '../../src/AppBundle/Factory'
        public: true

    AppBundle\Helper\:
             resource: '../../src/AppBundle/Helper'
             public: true

    # add more services, or override services that need manual wiring
    # AppBundle\Service\ExampleService:
    #     arguments:
    #         $someArgument: 'some_value'

    imagine.data.loader.local:
        class: AppBundle\Image\LocalDataLoader
        arguments:
            - "@liip_imagine"
        tags:
            - { name: "liip_imagine.binary.loader", loader: local }

    Jsor\Doctrine\PostGIS\Event\ORMSchemaEventSubscriber:
            tags:
                - { name: doctrine.event_subscriber, connection: default }