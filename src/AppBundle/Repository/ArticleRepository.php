<?php
namespace AppBundle\Repository;

use AppBundle\Entity\ArticleType;
use AppBundle\Helper\DateHelper;
use AppBundle\Mapper\AutoMapper;
use AppBundle\Utils\HDate;
use Doctrine\ORM\EntityRepository;
use AppBundle\Entity\Article;
use AppBundle\Factory\ArticleDTOFactory;
use AppBundle\Factory\ArticleCollectionDTOFactory;
use AppBundle\DTO\ArticleModalDTO;
use AppBundle\DTO\ArticleMainDTO;
use AppBundle\DTO\ArticleCollectionDTO;
use AppBundle\Helper\StaticHelper;
use Doctrine\ORM\Query;
use Doctrine\ORM\QueryBuilder;

/**
 * ArticleRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ArticleRepository extends EntityRepository
{
    /**
     * @param QueryBuilder $qb
     * @param ArticleType|null $type
     * @return QueryBuilder
     */
    public function filterByType(QueryBuilder $qb,?ArticleType $type){
        if($type === null) return $qb;
        return $qb->andWhere('o.type = :type')
            ->setParameter('type',$type);
    }

    /**
     * @param QueryBuilder $qb
     * @param string $order
     * @return QueryBuilder
     */
    public function sortByTitle(QueryBuilder $qb,string $order){
        return $qb->orderBy('o.title',$order);
    }

    /**
     * @param QueryBuilder $qb
     * @param string $order
     * @return QueryBuilder
     */
    public function sortByType_label(QueryBuilder $qb,string $order){
        return $qb->join('o.type','t')
        ->orderBy('t.label',$order);
    }

    /**
     * @param QueryBuilder $qb
     * @param HDate|null $hDate
     * @return QueryBuilder
     */
    public function filterByBeginHDate(QueryBuilder $qb,?HDate $hDate){
        if($hDate === null) return $qb;
        return $qb->andWhere('(o.endDateType IS NULL OR o.endDateMaxIndex >= :beginDateMinIndex)')
            ->setParameter('beginDateMinIndex', DateHelper::dateToIndex($hDate->getBeginDate()));
    }

    /**
     * @param QueryBuilder $qb
     * @param string $order
     * @return QueryBuilder
     */
    public function sortByBeginHDate(QueryBuilder $qb,string $order){
        return $qb->orderBy('o.beginDateMinIndex',$order);
    }

    /**
     * @param QueryBuilder $qb
     * @param HDate|null $hDate
     * @return QueryBuilder
     */
    public function filterByEndHDate(QueryBuilder $qb,?HDate $hDate){
        if($hDate === null) return $qb;
        return $qb->andWhere('(o.beginDateType IS NULL OR o.beginDateMinIndex <= :endDateMaxIndex)')
            ->setParameter('endDateMaxIndex', DateHelper::dateToIndex($hDate->getEndDate()));
    }

    /**
     * @param QueryBuilder $qb
     * @param string $order
     * @return QueryBuilder
     */
    public function sortByEndHDate(QueryBuilder $qb,string $order){
        return $qb->orderBy('o.endDateMaxIndex',$order);
    }
}
