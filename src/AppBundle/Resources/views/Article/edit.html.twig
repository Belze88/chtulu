{% extends 'base.html.twig' %}

{% block title %}
    {{ title }}
{% endblock %}

{% block stylesheets %}
{% endblock %}


{% block content_header %}
    <h1 class="hb-title"></h1>
{% endblock %}

{%  block content %}
    <div id="hb-article-container" class="row-fluid">
        <div id="hb-article-form" class="row-fluid"></div>
        <div id="hb-article-detail" class="row-fluid" hidden="hidden"></div>
    </div>
{% endblock %}

{% block javascript %}
    <script type="application/javascript">
        let article = JSON.parse($("#data-article").html());
        $("#data-article").html("");
        Object.setPrototypeOf(article, hb.util.dto.Article);
        article.finalize();

        let formBuilder = new hb.ui.form.FormBuilder("article_dto");
        let formMediator = new hb.ui.SfFormMediator();
        let detailBuilder = new hb.ui.detailBuilder.ArticleBuilder();
        let detailMediator = new hb.ui.detailMediator.ArticleMediator();

        let $target = $("#hb-article-container");
        $target.alerts=[];
        $target.detail = $("#hb-article-detail");
        $target.form = $("#hb-article-form");
        $target.title = $(".hb-title");
        detailMediator.$target = $target;
        formMediator.$target = $target;
        formMediator.object = article;

        formBuilder.build($target.form,article.groups.filter(item => item !== 'url'));

        detailBuilder.build($target.detail,article.groups.filter(item => item !== 'url'));
        $target.detail.append($("<a id=\"resume-edit\" name=\"preview\" class=\"btn btn-primary\">Continuer l'Ã©dition <i class=\"fa fa-edit\"></i></a>"));
        detailMediator.object = article;
        detailMediator.map(article.groups.filter(item => item !== 'url'));


        $target.form.find("form").on("submit",function(event,element){
            event.preventDefault();
            event.stopPropagation();
            console.log("submitted form");
            console.log(event);
            console.log($(event.target).serializeArray().slice());
            formMediator.return($(event.target).serializeArray().slice());
        });

        let tempArticle = {};
        $("#preview").on("click",function(event,element){
            tempArticle = jQuery.extend(true, {}, article);
            tempArticle.urlBag.post = null;
            formMediator.object = tempArticle;
            detailMediator.object = tempArticle;
            $target.form.find("form").trigger("submit");

            detailMediator.map(tempArticle.groups.filter(item => item !== 'url'));

            $target.form.hide();
            $target.detail.show();

            formMediator.object = article;
            detailMediator.object = article;
        });
        $("#resume-edit").on("click",function(event,element){
            $target.detail.hide();
            $target.form.show();
            tempArticle= null;
        });
        $("#cancel").on("click",function(event,element){
            formMediator.map();
        });

        console.log(article);

        // HTimeExplorer prototyping
        var hb = (function (hb) {
            "use strict";
            var _moduleName = "ui:HTimeExplorerBuilder/HTimeExplorerBuilder.js";
            if (((typeof hb.getLoadedModules === "function" ? hb.getLoadedModules() : [])).includes(_moduleName)) {
                console.log(_moduleName + " already loaded, skipping");
                return hb;
            }
            hb.ui = (function (ui, hb, $) {
                var _requiredModules = ["util:cmn/common.js"];

                /**
                 * @doc setDefaultOption for HTimeExplorerBuilder
                 * @param option
                 * @returns {object}
                 * @private
                 */
                let _setDefaultOption = function(option) {
                    return option;
                };
                /**
                 * @doc apply options to HArticleModal
                 * @private
                 */
                let _applyOption = function(modal){

                };

                let _svgDrawer = function(explorer,drawGroups=['all']){
                    explorer.d3SvgContainer.attr("width","100%").attr("height","100%");

                    explorer.d3SvgContainer.append("rect")
                        .attr("width", "100%")
                        .attr("height", "100%")
                        .attr("fill", "pink");

                };

                /**
                 * @doc builds explorer main object
                 * @private
                 */
                let _build = function(explorer) {
                    let $container = explorer.$target.parent().parent();
                    console.log($container.find("label"));
                    $container.find("label").each(function(){
                        $(this).remove();
                        $(this).parent().remove();
                    });

                    explorer.$header = $("<div class=\"row\"</div>").appendTo($container);
                    let $inputContainer = $("<div class=\"col-xs-6 col-xs-offset-3" +
                        " col-sm-4 col-sm-offset-4" +
                        " col-md-2 col-md-offset-5 +" +
                        " col-lg-2 col-lg-offset-5\"></div>").appendTo(explorer.$header);

                    explorer.$target.parent().detach();
                    $inputContainer.append(explorer.$target.detach());

                    explorer.$body = $("<div class=\"row\"</div>").appendTo($container);

                    explorer.$centralContainer = $("<div class=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\" " +
                        "style=\"white-space: nowrap;display: inline-block;" +
                        "float: none;padding:0px 30px 0px;\"><p>center</p></div>").appendTo(explorer.$body);

                    let d3CentralContainer = d3.select(explorer.$centralContainer.get(0));
                    explorer.d3SvgContainer = d3CentralContainer.append("svg");
                    _svgDrawer(explorer);




                    /*$modal.alerts=[];
                    $modal.container = $("<div class=\"modal-dialog modal-lg\" role=\"document\">").appendTo($modal);
                    $modal.content = $("<div class=\"modal-content\">").appendTo($modal.container);

                    $modal.header = $("<div class=\"modal-header\">").appendTo($modal.content);
                    $modal.title = $("<h4 class=\"modal-title\">Modal Header</h4>").appendTo($modal.header);
                    $modal.header.append("<button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>");

                    $modal.body = $("<div class=\"modal-body\">").appendTo($modal.content);
                    $modal.detail = $("<div class= \"hb-detail\">").appendTo($modal.body);
                    $modal.form = $("<div class= \"hb-form\">").appendTo($modal.body);

                    $modal.footer = $("<div class=\"modal-footer\">").appendTo($modal.content);
                    $modal.footer.append("<button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\">Fermer</button>");
                    */
                    return $container;
                };

                /**
                 * @module hb/ui/HTimeExplorerBuilder
                 * @class hb.ui.HTimeExplorerBuilder
                 */
                ui.HTimeExplorerBuilder = function($target,option = {}){
                    this.$target=$target;

                    this.option = _setDefaultOption(option);
                    _applyOption(this);
                    _build(this);
                    return this;
                };

                $($(".hb-hte").each(function(){
                    console.log("lol");
                    let hte = new ui.HTimeExplorerBuilder($(this));
                }));


                console.log(_moduleName + " loaded");
                return ui;
            }(hb.ui || {}, hb, $));

            let _loadedModules = ((typeof hb.getLoadedModules === "function") ? hb.getLoadedModules() : []);
            _loadedModules.push(_moduleName);
            hb.getLoadedModules = function () {
                return _loadedModules;
            };
            return hb;
        }(hb || {}));





    </script>
{% endblock%}

{% block data %}
    {{ form_start(form) }}
    {{ form_widget(form) }}
    <button id="{{ form.vars.id }}_save" name="{{ form.vars.id }}[save]" type="submit" class="btn btn-primary">Enregistrer</button>
    <a id="preview" name="preview" class="btn btn-info">Previsualiser <i class="fa fa-eye"></i></a>
    <a id="cancel" name="cancel" class="btn btn-default">Annuler modifications <i class="fa fa-undo"></i></a>
    {{ form_end(form) }}
    <div id="data-article">{{ articleDTO }}</div>
{% endblock %}