{% extends 'base.html.twig' %}

{% block title %}
    {{ title }}
{% endblock %}

{% block stylesheets %}
{% endblock %}


{% block content_header %}
    <h1 class="hb-title"></h1>
{% endblock %}

{%  block content %}
    <div id="hb-article-container" class="row-fluid">
        <div id="hb-article-form" class="row-fluid"></div>
        <div id="hb-article-detail" class="row-fluid" hidden="hidden"></div>
    </div>
{% endblock %}

{% block javascript %}
    <script type="application/javascript">
        let article = JSON.parse($("#data-article").html());
        $("#data-article").html("");
        Object.setPrototypeOf(article, hb.util.dto.Article);
        article.finalize();

        let formBuilder = new hb.ui.form.FormBuilder("article_dto");
        let formMediator = new hb.ui.SfFormMediator();
        let detailBuilder = new hb.ui.detailBuilder.ArticleBuilder();
        let detailMediator = new hb.ui.detailMediator.ArticleMediator();

        let $target = $("#hb-article-container");
        $target.alerts=[];
        $target.detail = $("#hb-article-detail");
        $target.form = $("#hb-article-form");
        $target.title = $(".hb-title");
        detailMediator.$target = $target;
        formMediator.$target = $target;
        formMediator.object = article;

        formBuilder.build($target.form,article.groups.filter(item => item !== 'url'));

        detailBuilder.build($target.detail,article.groups.filter(item => item !== 'url'));
        $target.detail.append($("<a id=\"resume-edit\" name=\"preview\" class=\"btn btn-primary\">Continuer l'Ã©dition <i class=\"fa fa-edit\"></i></a>"));
        detailMediator.object = article;
        detailMediator.map(article.groups.filter(item => item !== 'url'));


        $target.form.find("form").on("submit",function(event,element){
            event.preventDefault();
            event.stopPropagation();
            console.log("submitted form");
            console.log(event);
            console.log($(event.target).serializeArray().slice());
            formMediator.return($(event.target).serializeArray().slice());
        });

        let tempArticle = {};
        $("#preview").on("click",function(event,element){
            tempArticle = jQuery.extend(true, {}, article);
            tempArticle.urlBag.post = null;
            formMediator.object = tempArticle;
            detailMediator.object = tempArticle;
            $target.form.find("form").trigger("submit");

            detailMediator.map(tempArticle.groups.filter(item => item !== 'url'));

            $target.form.hide();
            $target.detail.show();

            formMediator.object = article;
            detailMediator.object = article;
        });
        $("#resume-edit").on("click",function(event,element){
            $target.detail.hide();
            $target.form.show();
            tempArticle= null;
        });
        $("#cancel").on("click",function(event,element){
            formMediator.map();
        });

        console.log(article);

        /**
         * @package HTimeRange.js
         * @doc HTimeRange.js :
         */
        var hb = (function (hb) {
            "use strict";
            var _moduleName = "util:HTimeRange/HTimeRange.js";
            if (((typeof hb.getLoadedModules === "function" ? hb.getLoadedModules() : [])).includes(_moduleName)) {
                console.log(_moduleName + " already loaded, skipping");
                return hb;
            }
            hb.util = (function (util, hb, $) {
                var _requiredModules = ["util:cmn/common.js,util:date/date.js"];

                /** @doc returns the best type of range according to a given HDate
                 * @param {hb.util.HDate} hDate
                 * @return {string}
                 * */
                let _getTypeFromHDate = function(hDate){
                    let dayCount = hDate.getIntervalSize();
                    if(dayCount <1){throw('unhandled date period for date range : minimum interval is one day.');}
                    else if(dayCount <50){return 'day';}
                    else if(dayCount <210){return 'week';}
                    else if(dayCount <1500){return 'month';}
                    else if(dayCount <20000){return 'year';}
                    else if(dayCount <200000){return 'decade';}
                    else{return 'century';}
                };

                /** @doc function adding/removing graduations according to a new beginDate */
                let _makeBeginGrad = function(hTimeRange){
                    if (this.beginDate.dateEquals(beginDate)) return;
                    else if (beginDate < this.beginDate){ // this case we need to add grads at the beginning of grad array
                        let subArray = this.computeSubArray(beginDate,this.beginDate,type);
                        this.grads = subArray.concat(this.grads);
                    }
                    else if (beginDate > this.endDate){
                        this.grads.forEach(function(grad) {
                            grad.remove();
                        });
                        this.grads = [];
                    }
                    else if (beginDate > this.beginDate){
                        let index =0;
                        while(this.grads[index].date < beginDate){
                            this.grads[index].remove();
                            index++;
                        }
                        this.grads.splice(0,index);
                    }
                    this.beginDate = beginDate;
                };

                /** @doc function adding/removing graduations according to a new endDate */
                let _setEndDate = function(hTimeRange){
                    if (this.endDate.dateEquals(endDate)) return;
                    else if (endDate > this.endDate){ // this case we need to add grads at the end of grad array
                        let subArray = this.computeSubArray(this.endDate,endDate,type);
                        this.grads = this.grads.concat(subArray);
                    }
                    else if (endDate <= this.beginDate){
                        this.grads.forEach(function(grad) {
                            grad.remove();
                        });
                        this.grads = [];
                    }
                    else if (endDate < this.endDate){
                        let index =this.grads.length-1;
                        while(index>=0 && this.grads[index].date >= endDate){
                            this.grads[index].remove();
                            index--;
                        }
                        this.grads.splice(index+1,this.grads.length-1-index);
                    }
                    this.endDate = endDate;
                };



                /**
                 * @doc handles the range of date graduations in a given HDate
                 * @module hb/util/HTimeRange
                 * @class hb.util.HTimeRange
                 */
                util.HTimeRange = function(parent = null){
                    this.parent = null;
                    this.hDate = null;
                    this.type = null;
                    this.grads = [];
                };

                Object.assign(util.HTimeRange.prototype,{
                    /** @doc switcher functions according to type */
                    switchFunctions:[
                        {type:'day',switcher:util.date.switchToNextDay,supType:'week'},
                        {type:'week',switcher:util.date.switchToNextWeek,supType:'month'},
                        {type:'month',switcher:util.date.switchToNextMonth,supType:'year'},
                        {type:'year',switcher:util.date.switchToNextYear,supType:'decade'},
                        {type:'decade',switcher:util.date.switchToNextDecade,supType:'century'},
                        {type:'century',switcher:util.date.switchToNextCentury,supType:'millennium'},
                        {type:'millennium',switcher:util.date.switchToNextMillennium,supType:'millennium'}
                    ],
                    /** @doc callback function to find the adhoc switcher function and superior type (compound) */
                    findSwitcherFunction: function(thisType){
                        return (this.switchFunctions).find(function(functionArray){
                            return (functionArray.type === thisType);
                        });
                    },
                    /**
                     * @param {jQuery} $target
                     * @param groups
                     * @return array
                     */
                    build:function($target,groups=['minimal']){
                        if(typeof $target.hAttributes === 'undefined'){$target.hAttributes=[];}
                        if(typeof $target.hGroups === 'undefined'){$target.hGroups=[];}
                        console.log(groups);
                        $.each(groups,function(key,value){
                            console.log(value);
                            if(typeof (_detailGroupBuilder["build" + hb.util.cmn.capitalize(value)]) !== 'function'){
                                throw "Group " + value + " doesn't exist for HArticleDetail";
                            }
                            _detailGroupBuilder["build" + hb.util.cmn.capitalize(value)]($target);
                        });
                        return groups;
                    }
                });


                console.log(_moduleName + " loaded");
                return util;
            }(hb.util || {}, hb, $));

            let _loadedModules = ((typeof hb.getLoadedModules === "function") ? hb.getLoadedModules() : []);
            _loadedModules.push(_moduleName);
            hb.getLoadedModules = function () {
                return _loadedModules;
            };
            return hb;
        }(hb || {}));




        // HTimeExplorer prototyping
        var hb = (function (hb) {
            "use strict";
            var _moduleName = "ui:HTimeExplorerBuilder/HTimeExplorerBuilder.js";
            if (((typeof hb.getLoadedModules === "function" ? hb.getLoadedModules() : [])).includes(_moduleName)) {
                console.log(_moduleName + " already loaded, skipping");
                return hb;
            }
            hb.ui = (function (ui, hb, $) {
                var _requiredModules = ["util:cmn/common.js"];

                /**
                 * @doc setDefaultOption for HTimeExplorerBuilder
                 * @param option
                 * @returns {object}
                 * @private
                 */
                let _setDefaultOption = function(option) {
                    return option;
                };
                /**
                 * @doc apply options to HArticleModal
                 * @private
                 */
                let _applyOption = function(modal){

                };

                let _svgDrawer = function(explorer,drawGroups=['all']){
                    explorer.d3SvgContainer.attr("width","100%").attr("height","100");
                    console.log(explorer.$centralContainer.width());

                    let hScale = d3.scaleLinear()
                        .domain([0, 100])
                        .range([0, explorer.$centralContainer.width()]);
                    console.log(hScale);

                    //let path = hb.util.geom.getTriangleDefPoints(100,10,150,50);
                    let relPath = "M 0% 50 L 5% 10 L 5% 30 L 88% 30 L "
                    + "88% 10 L 95% 50 L 88% 90 L 88% 70 L " +
                    "5% 70 L 5% 90 Z";

                    let absPath = hb.util.geom.hScalePath(relPath,hScale);




                    explorer.d3SvgTimeArrow= explorer.d3SvgContainer.append("path");
                    explorer.d3SvgTimeArrow.attr("fill","pink")
                        .attr("stroke","blue").attr("stroke-width",1)
                        .attr("d",absPath);

                    explorer.$articleContainer = $("<div class='hb-hte-articles'/>").appendTo(explorer.$centralContainer);
                    console.log(explorer.d3SvgContainer.style("width"));
                    explorer.$articleContainer.height("50").width(hb.util.geom.getPathMaxX(explorer.d3SvgTimeArrow.attr('d')));

                    explorer.d3ArticleContainer = d3.select(explorer.$articleContainer.get(0));

                    explorer.d3SvgArticleContainer = explorer.d3ArticleContainer.append("svg").attr("width","100%")
                        .attr("height","100");

                    let timeScale = d3.scaleTime()
                        .domain([new Date(2000,0,1),new Date(2001,0,1)])
                        .range([0,hb.util.geom.getPathMaxX(explorer.d3SvgTimeArrow.attr('d'))]);

                    let date = new Date(2000,6,24);

                    explorer.d3SvgArticleTest = explorer.d3SvgArticleContainer.append("circle")
                        .attr("r",5)
                        .attr("fill","yellow")
                        .attr("cursor","pointer")
                        .attr("stroke","orange")
                        .attr("stroke-width",2)
                        .attr("cx",timeScale(date))
                        .attr('cy',30);





                    explorer.$centralContainer.on("hb.hresize",function(event,ratio){
                        timeScale.range([0,hb.util.geom.getPathMaxX(explorer.d3SvgTimeArrow.attr('d'))*ratio]);
                        console.log(explorer.$centralContainer.width());
                        console.log(explorer.d3SvgTimeArrow.style("width"));
                        console.log(ratio);
                        explorer.d3SvgTimeArrow.attr("transform","scale(" + ratio + ",1)");
                        explorer.d3SvgArticleTest.attr("cx",timeScale(date));
                        explorer.$articleContainer.width(hb.util.geom.getPathMaxX(explorer.d3SvgTimeArrow.attr('d'))*ratio);
                    });




                };

                /**
                 * @doc builds explorer main object
                 * @private
                 */
                let _build = function(explorer) {
                    let $container = explorer.$target.parent().parent();
                    console.log($container.find("label"));
                    $container.find("label").each(function(){
                        $(this).remove();
                        $(this).parent().remove();
                    });

                    explorer.$header = $("<div class=\"row\"</div>").appendTo($container);
                    let $inputContainer = $("<div class=\"col-xs-6 col-xs-offset-3" +
                        " col-sm-4 col-sm-offset-4" +
                        " col-md-2 col-md-offset-5 +" +
                        " col-lg-2 col-lg-offset-5\"></div>").appendTo(explorer.$header);

                    explorer.$target.parent().detach();
                    $inputContainer.append(explorer.$target.detach());

                    explorer.$body = $("<div class=\"row\"</div>").appendTo($container);

                    explorer.$centralContainer = $("<div class=\"col-xs-12 col-sm-12 col-md-12 col-lg-12 hb-hte-container\" " +
                        "style=\"white-space: nowrap;display: inline-block;" +
                        "float: none;padding:0px 30px 0px;\"></div>").appendTo(explorer.$body);

                    let d3CentralContainer = d3.select(explorer.$centralContainer.get(0));
                    explorer.d3SvgContainer = d3CentralContainer.append("svg");
                    _svgDrawer(explorer);


                    return $container;
                };

                /**
                 * @module hb/ui/HTimeExplorerBuilder
                 * @class hb.ui.HTimeExplorerBuilder
                 */
                ui.HTimeExplorerBuilder = function($target,option = {}){
                    this.$target=$target;

                    this.option = _setDefaultOption(option);
                    _applyOption(this);
                    _build(this);
                    return this;
                };

                $($(".hb-hte").each(function(){
                    console.log("lol");
                    let hte = new ui.HTimeExplorerBuilder($(this));
                }));


                console.log(_moduleName + " loaded");
                return ui;
            }(hb.ui || {}, hb, $));

            let _loadedModules = ((typeof hb.getLoadedModules === "function") ? hb.getLoadedModules() : []);
            _loadedModules.push(_moduleName);
            hb.getLoadedModules = function () {
                return _loadedModules;
            };
            return hb;
        }(hb || {}));

        $(() => {
            let $container = $(".hb-container");
            let currentWidth = $container.width();
            let currentHeight = $container.height();
            let originalWidth = $container.width();
            let originalHeight = $container.height();
            console.log(originalWidth);

            let triggerResize = function() {
                resize = false;

                if(currentWidth !== $container.width()){
                    currentWidth = $container.width();
                    $(".hb-hte-container").trigger('hb.hresize',[$container.width()/originalWidth]);
                    resize = true;
                }
                if(currentHeight !== $container.height()){
                    resize = true;
                    currentHeight = $container.height();
                    //$(".hb-the-container").trigger('hb.vresize');
                }
                console.log(resize);
                return resize;
            };

            $(window).resize(triggerResize);
            $(".sidebar-toggle").on("click",function(){
                setTimeout(function(){
                    console.log($container.width());
                    triggerResize();
                }, 350);
            });
        });

        $(


        );





    </script>
{% endblock%}

{% block data %}
    {{ form_start(form) }}
    {{ form_widget(form) }}
    <button id="{{ form.vars.id }}_save" name="{{ form.vars.id }}[save]" type="submit" class="btn btn-primary">Enregistrer</button>
    <a id="preview" name="preview" class="btn btn-info">Previsualiser <i class="fa fa-eye"></i></a>
    <a id="cancel" name="cancel" class="btn btn-default">Annuler modifications <i class="fa fa-undo"></i></a>
    {{ form_end(form) }}
    <div id="data-article">{{ articleDTO }}</div>
{% endblock %}